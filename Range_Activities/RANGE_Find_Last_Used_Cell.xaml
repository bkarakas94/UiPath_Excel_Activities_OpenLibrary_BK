<?xml version="1.0" encoding="utf-8"?>
<Activity mc:Ignorable="sap sap2010" x:Class="WorkBOOK_Open" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_FilePATH_XL" Type="InArgument(x:String)" />
    <x:Property Name="in_WorkSHEET_Name" Type="InArgument(x:String)" />
    <x:Property Name="out_Last_Used_Cell" Type="OutArgument(x:String)" />
    <x:Property Name="out_Last_Used_Column" Type="OutArgument(x:String)" />
    <x:Property Name="out_Last_Used_Row" Type="OutArgument(x:Int32)" />
  </x:Members>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap2010:Annotation.AnnotationText>UPTF00000088eyI8SGVscExpbms+a19fQmFja2luZ0ZpZWxkIjpudWxsLCI8SW5pdGlhbFRvb2x0aXA+a19fQmFja2luZ0ZpZWxkIjpudWxsLCI8VmVyc2lvbj5rX19CYWNraW5nRmllbGQiOjF9</sap2010:Annotation.AnnotationText>
  <sap2010:WorkflowViewState.IdRef>WorkBOOK_Open_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Linq.Expressions</x:String>
      <x:String>Microsoft.Office.Interop.Excel</x:String>
      <x:String>System.Activities.Runtime.Collections</x:String>
      <x:String>System.Numerics</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Drawing.Common</AssemblyReference>
      <AssemblyReference>System.Drawing.Primitives</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Net.Mail</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>Microsoft.Office.Interop.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>System.Linq.Async</AssemblyReference>
      <AssemblyReference>System.Runtime.Numerics</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="WorkBOOK_Open" sap:VirtualizedContainerService.HintSize="1229,1157" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Sequence DisplayName="RANGE_Find_Last_Used_Cell" sap:VirtualizedContainerService.HintSize="452,1134" sap2010:WorkflowViewState.IdRef="Sequence_2">
      <Sequence.Variables>
        <Variable x:TypeArguments="x:String" Name="Workflow_Name">
          <Variable.Default>
            <Literal x:TypeArguments="x:String">RANGE_Find_Last_Used_Cell</Literal>
          </Variable.Default>
        </Variable>
        <Variable x:TypeArguments="x:Boolean" Name="boo_FileExists" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:FileExistsX DisplayName="File Exists" Exists="[boo_FileExists]" sap:VirtualizedContainerService.HintSize="418,165" sap2010:WorkflowViewState.IdRef="FileExistsX_1" Path="[in_FilePATH_XL]" />
      <If Condition="[boo_FileExists=False]" sap:VirtualizedContainerService.HintSize="418,336" sap2010:WorkflowViewState.IdRef="If_1">
        <If.Then>
          <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="416,173" sap2010:WorkflowViewState.IdRef="Sequence_5">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Throw Exception="[new SystemException(&quot;Workbook File does not exist!&quot;)]" sap:VirtualizedContainerService.HintSize="382,113" sap2010:WorkflowViewState.IdRef="Throw_2" />
          </Sequence>
        </If.Then>
        <If.Else>
          <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,25" sap2010:WorkflowViewState.IdRef="Sequence_6">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </Sequence>
        </If.Else>
      </If>
      <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="418,550" sap2010:WorkflowViewState.IdRef="TryCatch_1">
        <TryCatch.Try>
          <ui:InvokeCode ContinueOnError="{x:Null}" Code="Microsoft.Office.Interop.Excel.Workbook myWB =UiPath_Excel_Activities_OpenLibrary_BK.SourceFile.getWorkbookFromFilePath(excelFP);&#xD;&#xA;myWB.Activate();&#xD;&#xA;Microsoft.Office.Interop.Excel.Worksheet myWS = getWorksheetFromWorkbookByName(myWB,worksheetName);&#xD;&#xA;myWS.Activate();&#xD;&#xA;&#xD;&#xA;Microsoft.Office.Interop.Excel.Range lastCell = myWS.Cells.SpecialCells(Microsoft.Office.Interop.Excel.XlCellType.xlCellTypeLastCell,Type.Missing);&#xD;&#xA;myLastUsedCell = lastCell.Address[false,false];&#xD;&#xA;myLastUsedRow = lastCell.Row;&#xD;&#xA;myLastUsedColumn = myLastUsedCell.Substring(0,myLastUsedCell.Length-myLastUsedRow.ToString().Length);&#xD;&#xA;&#xD;&#xA;Microsoft.Office.Interop.Excel.Worksheet getWorksheetFromWorkbookByName(Microsoft.Office.Interop.Excel.Workbook in_WB,string in_wsName)&#xD;&#xA;{&#xD;&#xA;&#x9;Microsoft.Office.Interop.Excel.Worksheet rez = null;&#xD;&#xA;&#x9;foreach(Microsoft.Office.Interop.Excel.Worksheet ws in in_WB.Worksheets)&#xD;&#xA;&#x9;{&#xD;&#xA;&#x9;&#x9;if(ws.Name==in_wsName)&#xD;&#xA;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;rez = ws;&#xD;&#xA;&#x9;&#x9;&#x9;break;&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;if(rez==null)&#xD;&#xA;&#x9;{&#xD;&#xA;&#x9;&#x9;throw new Exception(&quot;Workbook does not contain this worksheet!&quot;+in_wsName);&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;return rez;&#xD;&#xA;}" DisplayName="Invoke Code" sap:VirtualizedContainerService.HintSize="416,165" sap2010:WorkflowViewState.IdRef="InvokeCode_1" Language="CSharp">
            <ui:InvokeCode.Arguments>
              <InArgument x:TypeArguments="x:String" x:Key="excelFP">
                <VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_FilePATH_XL" />
              </InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="worksheetName">
                <VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_WorkSHEET_Name" />
              </InArgument>
              <OutArgument x:TypeArguments="x:String" x:Key="myLastUsedCell">
                <VisualBasicReference x:TypeArguments="x:String" ExpressionText="out_Last_Used_Cell" />
              </OutArgument>
              <OutArgument x:TypeArguments="x:String" x:Key="myLastUsedColumn">
                <VisualBasicReference x:TypeArguments="x:String" ExpressionText="out_Last_Used_Column" />
              </OutArgument>
              <OutArgument x:TypeArguments="x:Int32" x:Key="myLastUsedRow">
                <VisualBasicReference x:TypeArguments="x:Int32" ExpressionText="out_Last_Used_Row" />
              </OutArgument>
            </ui:InvokeCode.Arguments>
          </ui:InvokeCode>
        </TryCatch.Try>
        <TryCatch.Catches>
          <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_1">
            <ActivityAction x:TypeArguments="s:Exception">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
              </ActivityAction.Argument>
              <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="416,173" sap2010:WorkflowViewState.IdRef="Sequence_3">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Throw Exception="[new SystemException(Workflow_Name+&quot; Exception--&gt;&quot;+exception.Message)]" sap:VirtualizedContainerService.HintSize="382,113" sap2010:WorkflowViewState.IdRef="Throw_1" />
              </Sequence>
            </ActivityAction>
          </Catch>
        </TryCatch.Catches>
        <TryCatch.Finally>
          <Sequence DisplayName="Finally" sap:VirtualizedContainerService.HintSize="416,25" sap2010:WorkflowViewState.IdRef="Sequence_4">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </Sequence>
        </TryCatch.Finally>
      </TryCatch>
    </Sequence>
  </Sequence>
</Activity>